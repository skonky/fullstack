// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";

var initialState_todos = [{
    id: 1,
    title: "Initial todo",
    isDone: false
  }];

var initialState = {
  newTodoValue: "",
  todos: initialState_todos
};

function reducer(state, action) {
  if (typeof action === "number") {
    if (action === /* CreateTodo */0) {
      return {
              newTodoValue: "",
              todos: state.todos.concat([{
                      id: state.todos.length + 1 | 0,
                      title: state.newTodoValue,
                      isDone: false
                    }])
            };
    } else {
      return {
              newTodoValue: state.newTodoValue,
              todos: state.todos.filter(function (todo) {
                    return !todo.isDone;
                  })
            };
    }
  }
  switch (action.TAG | 0) {
    case /* InputChanged */0 :
        return {
                newTodoValue: action._0,
                todos: state.todos
              };
    case /* RemoveTodo */1 :
        var id = action._0;
        return {
                newTodoValue: state.newTodoValue,
                todos: state.todos.filter(function (t) {
                      return t.id !== id;
                    })
              };
    case /* ToggleTodoStatus */2 :
        var id$1 = action._0;
        return {
                newTodoValue: state.newTodoValue,
                todos: state.todos.map(function (todo) {
                      if (todo.id === id$1) {
                        return {
                                id: todo.id,
                                title: todo.title,
                                isDone: !todo.isDone
                              };
                      } else {
                        return todo;
                      }
                    })
              };
    
  }
}

function $$default(param) {
  var match = React.useReducer(reducer, initialState);
  var dispatch = match[1];
  var state = match[0];
  var handleClearAllCompletedTodos = function (param) {
    return Curry._1(dispatch, /* ClearCompleted */1);
  };
  var noTodosCompleted = Belt_Option.isNone(Caml_option.undefined_to_opt(state.todos.find(function (todo) {
                return todo.isDone;
              })));
  var handleChange = function ($$event) {
    var value = $$event.target.value;
    return Curry._1(dispatch, {
                TAG: /* InputChanged */0,
                _0: value
              });
  };
  var handleCreateTodo = function (param) {
    return Curry._1(dispatch, /* CreateTodo */0);
  };
  return React.createElement("div", {
              className: "p-6"
            }, React.createElement("input", {
                  className: "input input-bordered mr-5",
                  placeholder: "Type here",
                  value: state.newTodoValue,
                  onChange: handleChange
                }), React.createElement("button", {
                  className: "btn btn-primary mr-3",
                  onClick: handleCreateTodo
                }, "Create"), React.createElement("button", {
                  className: "btn btn-success",
                  disabled: noTodosCompleted,
                  onClick: handleClearAllCompletedTodos
                }, "Clear completed"), React.createElement("div", {
                  className: "overflow-x-auto"
                }, React.createElement("table", {
                      className: "table w-full mt-6"
                    }, React.createElement("thead", undefined, React.createElement("tr", undefined, React.createElement("th", undefined, "#"), React.createElement("th", undefined, "Name"), React.createElement("th", {
                                  className: "text-right"
                                }, "Controls"))), React.createElement("tbody", undefined, state.todos.map(function (todo) {
                              var todoClassName = todo.isDone ? "p-3 line-through opacity-50" : "p-3";
                              var partial_arg = todo.id;
                              var partial_arg$1 = todo.id;
                              return React.createElement("tr", {
                                          key: String(todo.id)
                                        }, React.createElement("td", undefined, String(todo.id)), React.createElement("td", {
                                              className: todoClassName
                                            }, todo.title), React.createElement("td", {
                                              className: "text-right"
                                            }, React.createElement("button", {
                                                  className: "btn ml-3",
                                                  onClick: (function (param) {
                                                      return Curry._1(dispatch, {
                                                                  TAG: /* ToggleTodoStatus */2,
                                                                  _0: partial_arg
                                                                });
                                                    })
                                                }, "toggle"), React.createElement("button", {
                                                  className: "btn btn-error ml-3",
                                                  onClick: (function (param) {
                                                      return Curry._1(dispatch, {
                                                                  TAG: /* RemoveTodo */1,
                                                                  _0: partial_arg$1
                                                                });
                                                    })
                                                }, "delete")));
                            })))));
}

export {
  $$default ,
  $$default as default,
  
}
/* react Not a pure module */
